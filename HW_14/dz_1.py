# üìå–ù–∞ —Å–µ–º–∏–Ω–∞—Ä–µ 13 –±—ã–ª —Å–æ–∑–¥–∞–Ω –ø—Ä–æ–µ–∫—Ç –ø–æ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–∏–º—è, id, —É—Ä–æ–≤–µ–Ω—å).
# üìå–ù–∞–ø–∏—à–∏—Ç–µ 3-7 —Ç–µ—Å—Ç–æ–≤ unittest –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.
# üìå–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ setUp





import re
import pytest
import unittest
from os import path
from Project import Project
from User import User
import Excep as Ex

@pytest.fixture
def project():
    return Project.load_users('users.json')

@pytest.fixture
def admin(project):
    project.enter('Piter', 114)
    return project.admin

def test_enter(project):
    project.enter('Jack', 105)
    assert project.admin.name == 'Jack' and \
            project.admin.uid == 105

def test_enter_error(project):
    with pytest.raises(Ex.ErrorAcsess, match="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω —Å ID-10 –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"):
        project.enter('–ò–≤–∞–Ω', 10)

def test_add_user(project, admin):
    new_user = User('–ò–≤–∞–Ω', 105, 7)
    project.add_user('–ò–≤–∞–Ω', 105, 7)
    assert new_user in project.users

def test_add_user_error_level(project, admin):
    with pytest.raises(Ex.ErrorLevel, match=re.escape("–û–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, \
—Ç.–∫. –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (1) –≤—ã—à–µ, —á–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (4)!")):
        project.add_user('–ò–≤–∞–Ω', 105, 1)

def test_add_user_error_user(project, admin):

    with pytest.raises(Ex.ErrorUser, match="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Tom —Å ID-106 —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"):
        project.add_user('Tom', 106, 6)

def test_del_user(project, admin):
    new_user = User('Jack', 105, 5)
    project.del_user('Jack', 105)
    assert not new_user in project.users

def test_del_user_error_user(project, admin):
    with pytest.raises(Ex.ErrorAcsess, match="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ò–≤–∞–Ω —Å ID-105 –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!"):
        project.del_user('–ò–≤–∞–Ω', 105)

def test_del_user_error_level(project, admin):
    with pytest.raises(Ex.ErrorLevel, match=re.escape("–û–ø–µ—Ä–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Rudyard –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∞, \
—Ç.–∫. –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ (1) –≤—ã—à–µ, —á–µ–º —É—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (4)!")):
        project.del_user('Rudyard', 104)

def test_file_not_exist(project, tmp_path):
    f_name = tmp_path / 'result.json'
    project.write_to_json(f_name)
    assert path.exists(f_name) == True and path.getsize(f_name) != 0


if __name__ == '__main__':
    pytest.main()

if __name__ == '__main__':
    unittest.main()
